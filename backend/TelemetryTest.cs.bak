using System.Diagnostics;
using CopilotEvalApi.Observability;
using Microsoft.Extensions.Logging;

// Simple test to verify telemetry is working
using var loggerFactory = LoggerFactory.Create(builder => builder.AddConsole());
var logger = loggerFactory.CreateLogger("TelemetryTest");
logger.LogInformation("Testing OpenTelemetry instrumentation...");

// Test basic activity creation
using var activity = Telemetry.ActivitySource.StartActivity("test.operation");
activity?.SetTag("test.type", "demo");
activity?.SetTag("test.id", "12345");

logger.LogInformation("Activity created: {OperationName}", activity?.OperationName);
logger.LogInformation("Activity ID: {ActivityId}", activity?.Id);
logger.LogInformation("Trace ID: {TraceId}", activity?.TraceId);

// Test metrics
Telemetry.JobsEnqueued.Add(1, new TagList
{
    { "job.type", "test" },
    { "status", "success" }
});

logger.LogInformation("Metrics recorded successfully");

// Test worker telemetry
using var workerActivity = WorkerTelemetry.ActivitySource.StartActivity("test.worker.operation");
workerActivity?.SetTag("worker.id", Environment.MachineName);

WorkerTelemetry.MessagesReceived.Add(1, new TagList
{
    { "queue.name", "test-queue" }
});

logger.LogInformation("Worker telemetry recorded successfully");

logger.LogInformation("âœ… OpenTelemetry instrumentation test completed successfully!");
loggerFactory.Dispose();