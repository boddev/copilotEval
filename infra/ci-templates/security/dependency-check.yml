name: Reusable Dependency Check

on:
  workflow_call:
    inputs:
      check-frontend:
        description: 'Check frontend dependencies'
        required: false
        default: true
        type: boolean
      check-backend:
        description: 'Check backend dependencies'
        required: false
        default: true
        type: boolean
      frontend-directory:
        description: 'Frontend directory path'
        required: false
        default: 'frontend'
        type: string
      severity-level:
        description: 'Severity level threshold'
        required: false
        default: 'moderate'
        type: string
      fail-on-vulnerabilities:
        description: 'Fail workflow on vulnerabilities'
        required: false
        default: false
        type: boolean

jobs:
  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        if: ${{ inputs.check-frontend }}
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      - name: Frontend dependency audit
        if: ${{ inputs.check-frontend }}
        run: |
          cd ${{ inputs.frontend-directory }}
          echo "🔍 Checking frontend dependencies for vulnerabilities..."
          
          # Run npm audit
          if npm audit --audit-level ${{ inputs.severity-level }}; then
            echo "✅ No vulnerabilities found above ${{ inputs.severity-level }} level"
          else
            echo "⚠️ Vulnerabilities found - generating report"
            npm audit --json > ../frontend-audit-report.json || true
            
            if [ "${{ inputs.fail-on-vulnerabilities }}" == "true" ]; then
              echo "❌ Failing due to vulnerabilities"
              exit 1
            fi
          fi
          
      - name: Setup .NET
        if: ${{ inputs.check-backend }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          
      - name: Backend dependency check
        if: ${{ inputs.check-backend }}
        run: |
          echo "🔍 Checking backend dependencies for vulnerabilities..."
          
          # List packages with vulnerabilities
          if dotnet list package --vulnerable --include-transitive; then
            echo "✅ No vulnerable packages found"
          else
            echo "⚠️ Vulnerable packages detected - generating report"
            dotnet list package --vulnerable --include-transitive --format json > backend-vulnerability-report.json || true
            
            if [ "${{ inputs.fail-on-vulnerabilities }}" == "true" ]; then
              echo "❌ Failing due to vulnerabilities"
              exit 1
            fi
          fi
          
      - name: Generate dependency report
        run: |
          echo "# Dependency Security Report" > dependency-report.md
          echo "Generated on: $(date)" >> dependency-report.md
          echo "" >> dependency-report.md
          
          if [ -f "frontend-audit-report.json" ]; then
            echo "## Frontend Dependencies" >> dependency-report.md
            echo "Audit results saved to frontend-audit-report.json" >> dependency-report.md
            echo "" >> dependency-report.md
          fi
          
          if [ -f "backend-vulnerability-report.json" ]; then
            echo "## Backend Dependencies" >> dependency-report.md
            echo "Vulnerability results saved to backend-vulnerability-report.json" >> dependency-report.md
            echo "" >> dependency-report.md
          fi
          
      - name: Upload dependency reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-security-report-${{ github.run_id }}
          path: |
            dependency-report.md
            frontend-audit-report.json
            backend-vulnerability-report.json
          if-no-files-found: ignore
          retention-days: 30